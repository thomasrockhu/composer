name: "Continuous Integration"

on:
  push:
    paths-ignore:
      - 'doc/**'
  pull_request:
    paths-ignore:
      - 'doc/**'

env:
  COMPOSER_FLAGS: "--ansi --no-interaction --no-progress --prefer-dist"
  COMPOSER_UPDATE_FLAGS: ""
  SYMFONY_PHPUNIT_VERSION: "8.3"
  SYMFONY_PHPUNIT_REMOVE_RETURN_TYPEHINT: "1"

jobs:
  tests:
    name: "CI"

    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}

    strategy:
      matrix:
        php-version:
          - "5.3"
          - "5.4"
          - "5.5"
          - "5.6"
          - "7.0"
          - "7.1"
          - "7.2"
          - "7.3"
          - "7.4"
        dependencies: [locked]
        os: [ubuntu-latest]
        experimental: [false]
        include:
          - php-version: 5.3
            dependencies: highest
            os: ubuntu-latest
            experimental: false
          - php-version: 5.3
            dependencies: lowest
            os: ubuntu-latest
            experimental: false
          - php-version: 7.4
            dependencies: highest
            os: ubuntu-latest
            experimental: false
          - php-version: 7.4
            os: windows-latest
            dependencies: locked
            experimental: false
          - php-version: 7.4
            os: macos-latest
            dependencies: locked
            experimental: false
          - php-version: 8.0
            dependencies: lowest-ignore
            os: ubuntu-latest
            experimental: true
          - php-version: 8.0
            dependencies: highest-ignore
            os: ubuntu-latest
            experimental: true

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2"

      - name: "Choose PHPUnit version"
        if: "!startsWith(matrix.os, 'windows')"
        run: |
          if [ "${{ matrix.php-version }}" = "5.3" ] || [ "${{ matrix.php-version }}" = "5.4" ] || [ "${{ matrix.php-version }}" = "5.5" ]; then
            echo "::set-env name=SYMFONY_PHPUNIT_VERSION::4.8";
          elif [ "${{ matrix.php-version }}" = "5.6" ]; then
            echo "::set-env name=SYMFONY_PHPUNIT_VERSION::5.7";
          elif [ "${{ matrix.php-version }}" = "7.0" ]; then
            echo "::set-env name=SYMFONY_PHPUNIT_VERSION::6.5";
          elif [ "${{ matrix.php-version }}" = "7.1" ]; then
            echo "::set-env name=SYMFONY_PHPUNIT_VERSION::7.5";
          else
            echo "::set-env name=SYMFONY_PHPUNIT_VERSION::8.3";
          fi

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          coverage: "none"
          extensions: "intl, zip"
          ini-values: "memory_limit=-1, phar.readonly=0"
          php-version: "${{ matrix.php-version }}"

      - name: "Update to latest Composer snapshot"
        if: "!startsWith(matrix.os, 'windows')"
        run: "sudo -i composer self-update --snapshot"

      - name: "Update to latest Composer snapshot on Windows"
        if: "startsWith(matrix.os, 'windows')"
        run: "composer self-update --snapshot"

      - name: "Determine composer cache directory"
        id: "determine-composer-cache-directory"
        run: "echo \"::set-output name=directory::$(composer config cache-dir)\""

      - name: "Cache dependencies installed with composer"
        uses: "actions/cache@v1"
        with:
          path: "${{ steps.determine-composer-cache-directory.outputs.directory }}"
          key: "php-${{ matrix.php-version }}-symfony-php-unit-version-${{ env.SYMFONY_PHPUNIT_VERSION }}-${{ hashFiles('**/composer.lock') }}"
          restore-keys: "php-${{ matrix.php-version }}-symfony-php-unit-version-${{ env.SYMFONY_PHPUNIT_VERSION }}"

      - name: "Handle lowest dependencies update"
        if: "contains(matrix.dependencies, 'lowest')"
        run: "echo \"::set-env name=COMPOSER_UPDATE_FLAGS::$COMPOSER_UPDATE_FLAGS --prefer-lowest\""

      - name: "Handle ignore-platform-reqs dependencies update"
        if: "contains(matrix.dependencies, 'ignore')"
        run: "echo \"::set-env name=COMPOSER_FLAGS::$COMPOSER_FLAGS --ignore-platform-req=php\""

      - name: "Remove platform config to get latest dependencies for current PHP version when build is not locked"
        run: "composer config platform --unset"

      - name: "Update dependencies from composer.json using composer binary provided by system"
        if: "contains(matrix.dependencies, 'highest') || contains(matrix.dependencies, 'lowest')"
        run: "composer update ${{ env.COMPOSER_UPDATE_FLAGS }} ${{ env.COMPOSER_FLAGS }}"

      - name: "Install dependencies from composer.lock using composer binary provided by system"
        if: "matrix.dependencies == 'locked'"
        run: "composer install ${{ env.COMPOSER_FLAGS }}"

      - name: "Require latest PHPUnitBridge for PHP 8"
        if: "matrix.php-version == '8.0'"
        run: |
          composer require --no-update --dev symfony/phpunit-bridge:^5.1
          composer config -g platform-check false

      - name: "Update Symfony's PHPUnitBridge to latest available for the current PHP always as it is not really a dependency of the project"
        run: "composer update ${{ env.COMPOSER_FLAGS }} symfony/phpunit-bridge"

      - name: "Run install again using composer binary from source"
        run: "bin/composer install ${{ env.COMPOSER_FLAGS }}"

      - name: "Validate composer.json"
        run: "bin/composer validate"

      - name: "Prepare git environment"
        run: "git config --global user.name composer && git config --global user.email composer@example.com"

      - name: "Run tests"
        if: "matrix.php-version != '7.3'"
        run: "vendor/bin/simple-phpunit --coverage-clover=coverage.xml"

      - name: "Run complete test suite on 7.3"
        if: "matrix.php-version == '7.3'"
        run: "vendor/bin/simple-phpunit --configuration tests/complete.phpunit.xml --coverage-clover=coverage.xml"

      - name: "Send coverage reports to Codecov"
        run: "curl -s https://codecov.io/bash | bash"

